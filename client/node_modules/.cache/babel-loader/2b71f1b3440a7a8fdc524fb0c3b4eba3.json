{"ast":null,"code":"var _jsxFileName = \"/Users/david/Downloads/youtube-top/client/src/components/Channels/Channels.js\";\nimport React from \"react\";\nimport \"./Channels.css\";\nimport \"../../App.css\";\nimport ChannelCell from \"../ChannelCell/ChannelCell\";\nimport SkeletonChannel from \"../Skeletons/SkeletonChannel\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_SIZE = 50;\n\nclass Channels extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      channels: []\n    };\n\n    this.fetchChannels = async () => {\n      const response = await axios.get(\"/channels\");\n      if (!response) throw new Error('Failed to fetch channels!');\n      this.setState({\n        channels: response.data\n      });\n    };\n  }\n\n  renderChannels() {\n    const {\n      channels\n    } = this.state;\n    const {\n      theme\n    } = this.props;\n    return channels.map((channel, i) => {\n      const {\n        channelPic,\n        startDate,\n        uploadCount,\n        viewCount,\n        title,\n        subscribers,\n        country,\n        id\n      } = channel;\n      return /*#__PURE__*/_jsxDEV(ChannelCell, {\n        rank: i + 1,\n        url: `https://youtube.com/channel/${id}`,\n        thumbnail: channelPic,\n        startDate: startDate,\n        uploads: uploadCount,\n        views: viewCount,\n        title: title,\n        subscribers: subscribers,\n        country: country,\n        theme: theme\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  loadSkeleton() {\n    const {\n      theme\n    } = this.props;\n    let arr = [];\n\n    for (let i = 0; i < DEFAULT_SIZE; i++) {\n      arr.push(i);\n    }\n\n    return arr.map(x => {\n      return /*#__PURE__*/_jsxDEV(SkeletonChannel, {\n        theme: theme\n      }, x, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    });\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.fetchChannels();\n    }, 500);\n  }\n\n  render() {\n    const {\n      theme\n    } = this.props;\n    const length = this.state.channels.length;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left container\",\n      \"data-theme\": theme,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        \"data-theme\": theme,\n        children: \"Top Channels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          \"data-theme\": theme,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: \"center\",\n                children: \"Rank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Created On\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Uploads\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Views\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Subscribers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: length === 0 ? this.loadSkeleton() : this.renderChannels()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Channels;","map":{"version":3,"sources":["/Users/david/Downloads/youtube-top/client/src/components/Channels/Channels.js"],"names":["React","ChannelCell","SkeletonChannel","axios","DEFAULT_SIZE","Channels","Component","state","channels","fetchChannels","response","get","Error","setState","data","renderChannels","theme","props","map","channel","i","channelPic","startDate","uploadCount","viewCount","title","subscribers","country","id","loadSkeleton","arr","push","x","componentDidMount","setTimeout","render","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Channels.css\";\nimport \"../../App.css\";\nimport ChannelCell from \"../ChannelCell/ChannelCell\";\nimport SkeletonChannel from \"../Skeletons/SkeletonChannel\";\nimport axios from \"axios\";\n\nconst DEFAULT_SIZE = 50;\nclass Channels extends React.Component {\n  state = { channels: [] };\n\n  renderChannels() {\n    const { channels } = this.state;\n    const { theme } = this.props;\n    return channels.map((channel, i) => {\n      const {channelPic, startDate, uploadCount, \n        viewCount, title, subscribers, country, id} = channel;\n      return (\n        <ChannelCell\n          rank={i + 1}\n          url={`https://youtube.com/channel/${id}`}\n          thumbnail={channelPic}\n          startDate={startDate}\n          uploads={uploadCount}\n          views={viewCount}\n          title={title}\n          subscribers={subscribers}\n          country={country}\n          key={id}\n          theme={theme}\n        />\n      );\n    });\n  }\n\n  fetchChannels = async () => {\n    const response = await axios.get(\"/channels\");\n    if(!response) throw new Error('Failed to fetch channels!');\n    this.setState({channels: response.data});\n  }\n\n  loadSkeleton() {\n    const { theme } = this.props;\n    let arr = [];\n    for (let i = 0; i < DEFAULT_SIZE; i++) {\n      arr.push(i);\n    }\n    return arr.map((x) => {\n      return <SkeletonChannel theme={theme} key={x} />;\n    });\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.fetchChannels();\n    },500);\n  }\n\n  render() {\n    const { theme } = this.props;\n    const length = this.state.channels.length;\n    return (\n      <div className=\"left container\" data-theme={theme}>\n        <h2 data-theme={theme}>Top Channels</h2>\n        <div>\n          <table className=\"table\" data-theme={theme}>\n            <thead>\n              <tr>\n                <th scope=\"col\" className=\"center\">\n                  Rank\n                </th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Created On</th>\n                <th scope=\"col\">Uploads</th>\n                <th scope=\"col\">Views</th>\n                <th scope=\"col\">Subscribers</th>\n                <th scope=\"col\">Country</th>\n              </tr>\n            </thead>\n            <tbody>\n              {length === 0 ? this.loadSkeleton() : this.renderChannels()}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Channels;\n"]},"metadata":{},"sourceType":"module"}